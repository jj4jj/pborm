// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pborm.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "pborm.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace pborm {

namespace {

const ::google::protobuf::Descriptor* OrmMsgReqSelect_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  OrmMsgReqSelect_reflection_ = NULL;
const ::google::protobuf::Descriptor* OrmMsgRspSelect_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  OrmMsgRspSelect_reflection_ = NULL;
const ::google::protobuf::Descriptor* OrmMsgReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  OrmMsgReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* OrmMsgRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  OrmMsgRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* OrmMsgCB_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  OrmMsgCB_reflection_ = NULL;
const ::google::protobuf::Descriptor* OrmMsgOpt_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  OrmMsgOpt_reflection_ = NULL;
const ::google::protobuf::Descriptor* OrmMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  OrmMsg_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* OrmMsgOP_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_pborm_2eproto() {
  protobuf_AddDesc_pborm_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "pborm.proto");
  GOOGLE_CHECK(file != NULL);
  OrmMsgReqSelect_descriptor_ = file->message_type(0);
  static const int OrmMsgReqSelect_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrmMsgReqSelect, where_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrmMsgReqSelect, offset_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrmMsgReqSelect, limit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrmMsgReqSelect, fields_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrmMsgReqSelect, order_),
  };
  OrmMsgReqSelect_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      OrmMsgReqSelect_descriptor_,
      OrmMsgReqSelect::default_instance_,
      OrmMsgReqSelect_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrmMsgReqSelect, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrmMsgReqSelect, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(OrmMsgReqSelect));
  OrmMsgRspSelect_descriptor_ = file->message_type(1);
  static const int OrmMsgRspSelect_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrmMsgRspSelect, total_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrmMsgRspSelect, msgs_),
  };
  OrmMsgRspSelect_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      OrmMsgRspSelect_descriptor_,
      OrmMsgRspSelect::default_instance_,
      OrmMsgRspSelect_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrmMsgRspSelect, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrmMsgRspSelect, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(OrmMsgRspSelect));
  OrmMsgReq_descriptor_ = file->message_type(2);
  static const int OrmMsgReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrmMsgReq, msg_data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrmMsgReq, select_),
  };
  OrmMsgReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      OrmMsgReq_descriptor_,
      OrmMsgReq::default_instance_,
      OrmMsgReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrmMsgReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrmMsgReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(OrmMsgReq));
  OrmMsgRsp_descriptor_ = file->message_type(3);
  static const int OrmMsgRsp_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrmMsgRsp, count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrmMsgRsp, err_no_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrmMsgRsp, err_msg_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrmMsgRsp, select_),
  };
  OrmMsgRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      OrmMsgRsp_descriptor_,
      OrmMsgRsp::default_instance_,
      OrmMsgRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrmMsgRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrmMsgRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(OrmMsgRsp));
  OrmMsgCB_descriptor_ = file->message_type(4);
  static const int OrmMsgCB_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrmMsgCB, data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrmMsgCB, cookie_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrmMsgCB, seq_),
  };
  OrmMsgCB_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      OrmMsgCB_descriptor_,
      OrmMsgCB::default_instance_,
      OrmMsgCB_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrmMsgCB, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrmMsgCB, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(OrmMsgCB));
  OrmMsgOpt_descriptor_ = file->message_type(5);
  static const int OrmMsgOpt_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrmMsgOpt, flatmode_),
  };
  OrmMsgOpt_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      OrmMsgOpt_descriptor_,
      OrmMsgOpt::default_instance_,
      OrmMsgOpt_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrmMsgOpt, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrmMsgOpt, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(OrmMsgOpt));
  OrmMsg_descriptor_ = file->message_type(6);
  static const int OrmMsg_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrmMsg, msg_full_type_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrmMsg, op_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrmMsg, req_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrmMsg, rsp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrmMsg, cb_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrmMsg, opt_),
  };
  OrmMsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      OrmMsg_descriptor_,
      OrmMsg::default_instance_,
      OrmMsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrmMsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrmMsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(OrmMsg));
  OrmMsgOP_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_pborm_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    OrmMsgReqSelect_descriptor_, &OrmMsgReqSelect::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    OrmMsgRspSelect_descriptor_, &OrmMsgRspSelect::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    OrmMsgReq_descriptor_, &OrmMsgReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    OrmMsgRsp_descriptor_, &OrmMsgRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    OrmMsgCB_descriptor_, &OrmMsgCB::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    OrmMsgOpt_descriptor_, &OrmMsgOpt::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    OrmMsg_descriptor_, &OrmMsg::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_pborm_2eproto() {
  delete OrmMsgReqSelect::default_instance_;
  delete OrmMsgReqSelect_reflection_;
  delete OrmMsgRspSelect::default_instance_;
  delete OrmMsgRspSelect_reflection_;
  delete OrmMsgReq::default_instance_;
  delete OrmMsgReq_reflection_;
  delete OrmMsgRsp::default_instance_;
  delete OrmMsgRsp_reflection_;
  delete OrmMsgCB::default_instance_;
  delete OrmMsgCB_reflection_;
  delete OrmMsgOpt::default_instance_;
  delete OrmMsgOpt_reflection_;
  delete OrmMsg::default_instance_;
  delete OrmMsg_reflection_;
}

void protobuf_AddDesc_pborm_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\013pborm.proto\022\005pborm\"^\n\017OrmMsgReqSelect\022"
    "\r\n\005where\030\001 \001(\t\022\016\n\006offset\030\002 \001(\005\022\r\n\005limit\030"
    "\003 \001(\005\022\016\n\006fields\030\004 \001(\t\022\r\n\005order\030\005 \001(\005\".\n\017"
    "OrmMsgRspSelect\022\r\n\005total\030\001 \001(\005\022\014\n\004msgs\030\002"
    " \003(\014\"E\n\tOrmMsgReq\022\020\n\010msg_data\030\001 \001(\014\022&\n\006s"
    "elect\030\002 \001(\0132\026.pborm.OrmMsgReqSelect\"c\n\tO"
    "rmMsgRsp\022\r\n\005count\030\001 \001(\005\022\016\n\006err_no\030\002 \001(\005\022"
    "\017\n\007err_msg\030\003 \001(\t\022&\n\006select\030\004 \001(\0132\026.pborm"
    ".OrmMsgRspSelect\"5\n\010OrmMsgCB\022\014\n\004data\030\001 \001"
    "(\014\022\016\n\006cookie\030\002 \001(\003\022\013\n\003seq\030\003 \001(\r\" \n\tOrmMs"
    "gOpt\022\023\n\010flatmode\030\001 \001(\r:\0010\"\273\001\n\006OrmMsg\022\032\n\022"
    "msg_full_type_name\030\001 \002(\t\022\033\n\002op\030\002 \002(\0162\017.p"
    "borm.OrmMsgOP\022\035\n\003req\030\003 \001(\0132\020.pborm.OrmMs"
    "gReq\022\035\n\003rsp\030\004 \001(\0132\020.pborm.OrmMsgRsp\022\033\n\002c"
    "b\030\005 \001(\0132\017.pborm.OrmMsgCB\022\035\n\003opt\030\006 \001(\0132\020."
    "pborm.OrmMsgOpt*j\n\010OrmMsgOP\022\017\n\013ORM_COMMA"
    "ND\020\000\022\016\n\nORM_INSERT\020\001\022\016\n\nORM_DELETE\020\002\022\016\n\n"
    "ORM_SELECT\020\003\022\016\n\nORM_UPDATE\020\004\022\r\n\tORM_COUN"
    "T\020\005", 723);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "pborm.proto", &protobuf_RegisterTypes);
  OrmMsgReqSelect::default_instance_ = new OrmMsgReqSelect();
  OrmMsgRspSelect::default_instance_ = new OrmMsgRspSelect();
  OrmMsgReq::default_instance_ = new OrmMsgReq();
  OrmMsgRsp::default_instance_ = new OrmMsgRsp();
  OrmMsgCB::default_instance_ = new OrmMsgCB();
  OrmMsgOpt::default_instance_ = new OrmMsgOpt();
  OrmMsg::default_instance_ = new OrmMsg();
  OrmMsgReqSelect::default_instance_->InitAsDefaultInstance();
  OrmMsgRspSelect::default_instance_->InitAsDefaultInstance();
  OrmMsgReq::default_instance_->InitAsDefaultInstance();
  OrmMsgRsp::default_instance_->InitAsDefaultInstance();
  OrmMsgCB::default_instance_->InitAsDefaultInstance();
  OrmMsgOpt::default_instance_->InitAsDefaultInstance();
  OrmMsg::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_pborm_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_pborm_2eproto {
  StaticDescriptorInitializer_pborm_2eproto() {
    protobuf_AddDesc_pborm_2eproto();
  }
} static_descriptor_initializer_pborm_2eproto_;
const ::google::protobuf::EnumDescriptor* OrmMsgOP_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OrmMsgOP_descriptor_;
}
bool OrmMsgOP_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#ifndef _MSC_VER
const int OrmMsgReqSelect::kWhereFieldNumber;
const int OrmMsgReqSelect::kOffsetFieldNumber;
const int OrmMsgReqSelect::kLimitFieldNumber;
const int OrmMsgReqSelect::kFieldsFieldNumber;
const int OrmMsgReqSelect::kOrderFieldNumber;
#endif  // !_MSC_VER

OrmMsgReqSelect::OrmMsgReqSelect()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pborm.OrmMsgReqSelect)
}

void OrmMsgReqSelect::InitAsDefaultInstance() {
}

OrmMsgReqSelect::OrmMsgReqSelect(const OrmMsgReqSelect& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pborm.OrmMsgReqSelect)
}

void OrmMsgReqSelect::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  where_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  offset_ = 0;
  limit_ = 0;
  fields_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  order_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

OrmMsgReqSelect::~OrmMsgReqSelect() {
  // @@protoc_insertion_point(destructor:pborm.OrmMsgReqSelect)
  SharedDtor();
}

void OrmMsgReqSelect::SharedDtor() {
  if (where_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete where_;
  }
  if (fields_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete fields_;
  }
  if (this != default_instance_) {
  }
}

void OrmMsgReqSelect::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OrmMsgReqSelect::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OrmMsgReqSelect_descriptor_;
}

const OrmMsgReqSelect& OrmMsgReqSelect::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_pborm_2eproto();
  return *default_instance_;
}

OrmMsgReqSelect* OrmMsgReqSelect::default_instance_ = NULL;

OrmMsgReqSelect* OrmMsgReqSelect::New() const {
  return new OrmMsgReqSelect;
}

void OrmMsgReqSelect::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<OrmMsgReqSelect*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 31) {
    ZR_(offset_, limit_);
    if (has_where()) {
      if (where_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        where_->clear();
      }
    }
    if (has_fields()) {
      if (fields_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        fields_->clear();
      }
    }
    order_ = 0;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool OrmMsgReqSelect::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pborm.OrmMsgReqSelect)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string where = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_where()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->where().data(), this->where().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "where");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_offset;
        break;
      }

      // optional int32 offset = 2;
      case 2: {
        if (tag == 16) {
         parse_offset:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &offset_)));
          set_has_offset();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_limit;
        break;
      }

      // optional int32 limit = 3;
      case 3: {
        if (tag == 24) {
         parse_limit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &limit_)));
          set_has_limit();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_fields;
        break;
      }

      // optional string fields = 4;
      case 4: {
        if (tag == 34) {
         parse_fields:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fields()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->fields().data(), this->fields().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fields");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_order;
        break;
      }

      // optional int32 order = 5;
      case 5: {
        if (tag == 40) {
         parse_order:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &order_)));
          set_has_order();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pborm.OrmMsgReqSelect)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pborm.OrmMsgReqSelect)
  return false;
#undef DO_
}

void OrmMsgReqSelect::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pborm.OrmMsgReqSelect)
  // optional string where = 1;
  if (has_where()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->where().data(), this->where().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "where");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->where(), output);
  }

  // optional int32 offset = 2;
  if (has_offset()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->offset(), output);
  }

  // optional int32 limit = 3;
  if (has_limit()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->limit(), output);
  }

  // optional string fields = 4;
  if (has_fields()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->fields().data(), this->fields().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fields");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->fields(), output);
  }

  // optional int32 order = 5;
  if (has_order()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->order(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pborm.OrmMsgReqSelect)
}

::google::protobuf::uint8* OrmMsgReqSelect::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pborm.OrmMsgReqSelect)
  // optional string where = 1;
  if (has_where()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->where().data(), this->where().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "where");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->where(), target);
  }

  // optional int32 offset = 2;
  if (has_offset()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->offset(), target);
  }

  // optional int32 limit = 3;
  if (has_limit()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->limit(), target);
  }

  // optional string fields = 4;
  if (has_fields()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->fields().data(), this->fields().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fields");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->fields(), target);
  }

  // optional int32 order = 5;
  if (has_order()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->order(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pborm.OrmMsgReqSelect)
  return target;
}

int OrmMsgReqSelect::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string where = 1;
    if (has_where()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->where());
    }

    // optional int32 offset = 2;
    if (has_offset()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->offset());
    }

    // optional int32 limit = 3;
    if (has_limit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->limit());
    }

    // optional string fields = 4;
    if (has_fields()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->fields());
    }

    // optional int32 order = 5;
    if (has_order()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->order());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OrmMsgReqSelect::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const OrmMsgReqSelect* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const OrmMsgReqSelect*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void OrmMsgReqSelect::MergeFrom(const OrmMsgReqSelect& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_where()) {
      set_where(from.where());
    }
    if (from.has_offset()) {
      set_offset(from.offset());
    }
    if (from.has_limit()) {
      set_limit(from.limit());
    }
    if (from.has_fields()) {
      set_fields(from.fields());
    }
    if (from.has_order()) {
      set_order(from.order());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void OrmMsgReqSelect::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OrmMsgReqSelect::CopyFrom(const OrmMsgReqSelect& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OrmMsgReqSelect::IsInitialized() const {

  return true;
}

void OrmMsgReqSelect::Swap(OrmMsgReqSelect* other) {
  if (other != this) {
    std::swap(where_, other->where_);
    std::swap(offset_, other->offset_);
    std::swap(limit_, other->limit_);
    std::swap(fields_, other->fields_);
    std::swap(order_, other->order_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata OrmMsgReqSelect::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = OrmMsgReqSelect_descriptor_;
  metadata.reflection = OrmMsgReqSelect_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int OrmMsgRspSelect::kTotalFieldNumber;
const int OrmMsgRspSelect::kMsgsFieldNumber;
#endif  // !_MSC_VER

OrmMsgRspSelect::OrmMsgRspSelect()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pborm.OrmMsgRspSelect)
}

void OrmMsgRspSelect::InitAsDefaultInstance() {
}

OrmMsgRspSelect::OrmMsgRspSelect(const OrmMsgRspSelect& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pborm.OrmMsgRspSelect)
}

void OrmMsgRspSelect::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  total_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

OrmMsgRspSelect::~OrmMsgRspSelect() {
  // @@protoc_insertion_point(destructor:pborm.OrmMsgRspSelect)
  SharedDtor();
}

void OrmMsgRspSelect::SharedDtor() {
  if (this != default_instance_) {
  }
}

void OrmMsgRspSelect::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OrmMsgRspSelect::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OrmMsgRspSelect_descriptor_;
}

const OrmMsgRspSelect& OrmMsgRspSelect::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_pborm_2eproto();
  return *default_instance_;
}

OrmMsgRspSelect* OrmMsgRspSelect::default_instance_ = NULL;

OrmMsgRspSelect* OrmMsgRspSelect::New() const {
  return new OrmMsgRspSelect;
}

void OrmMsgRspSelect::Clear() {
  total_ = 0;
  msgs_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool OrmMsgRspSelect::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pborm.OrmMsgRspSelect)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 total = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_)));
          set_has_total();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_msgs;
        break;
      }

      // repeated bytes msgs = 2;
      case 2: {
        if (tag == 18) {
         parse_msgs:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_msgs()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_msgs;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pborm.OrmMsgRspSelect)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pborm.OrmMsgRspSelect)
  return false;
#undef DO_
}

void OrmMsgRspSelect::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pborm.OrmMsgRspSelect)
  // optional int32 total = 1;
  if (has_total()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->total(), output);
  }

  // repeated bytes msgs = 2;
  for (int i = 0; i < this->msgs_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      2, this->msgs(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pborm.OrmMsgRspSelect)
}

::google::protobuf::uint8* OrmMsgRspSelect::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pborm.OrmMsgRspSelect)
  // optional int32 total = 1;
  if (has_total()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->total(), target);
  }

  // repeated bytes msgs = 2;
  for (int i = 0; i < this->msgs_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(2, this->msgs(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pborm.OrmMsgRspSelect)
  return target;
}

int OrmMsgRspSelect::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 total = 1;
    if (has_total()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->total());
    }

  }
  // repeated bytes msgs = 2;
  total_size += 1 * this->msgs_size();
  for (int i = 0; i < this->msgs_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->msgs(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OrmMsgRspSelect::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const OrmMsgRspSelect* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const OrmMsgRspSelect*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void OrmMsgRspSelect::MergeFrom(const OrmMsgRspSelect& from) {
  GOOGLE_CHECK_NE(&from, this);
  msgs_.MergeFrom(from.msgs_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_total()) {
      set_total(from.total());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void OrmMsgRspSelect::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OrmMsgRspSelect::CopyFrom(const OrmMsgRspSelect& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OrmMsgRspSelect::IsInitialized() const {

  return true;
}

void OrmMsgRspSelect::Swap(OrmMsgRspSelect* other) {
  if (other != this) {
    std::swap(total_, other->total_);
    msgs_.Swap(&other->msgs_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata OrmMsgRspSelect::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = OrmMsgRspSelect_descriptor_;
  metadata.reflection = OrmMsgRspSelect_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int OrmMsgReq::kMsgDataFieldNumber;
const int OrmMsgReq::kSelectFieldNumber;
#endif  // !_MSC_VER

OrmMsgReq::OrmMsgReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pborm.OrmMsgReq)
}

void OrmMsgReq::InitAsDefaultInstance() {
  select_ = const_cast< ::pborm::OrmMsgReqSelect*>(&::pborm::OrmMsgReqSelect::default_instance());
}

OrmMsgReq::OrmMsgReq(const OrmMsgReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pborm.OrmMsgReq)
}

void OrmMsgReq::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  msg_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  select_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

OrmMsgReq::~OrmMsgReq() {
  // @@protoc_insertion_point(destructor:pborm.OrmMsgReq)
  SharedDtor();
}

void OrmMsgReq::SharedDtor() {
  if (msg_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete msg_data_;
  }
  if (this != default_instance_) {
    delete select_;
  }
}

void OrmMsgReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OrmMsgReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OrmMsgReq_descriptor_;
}

const OrmMsgReq& OrmMsgReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_pborm_2eproto();
  return *default_instance_;
}

OrmMsgReq* OrmMsgReq::default_instance_ = NULL;

OrmMsgReq* OrmMsgReq::New() const {
  return new OrmMsgReq;
}

void OrmMsgReq::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_msg_data()) {
      if (msg_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        msg_data_->clear();
      }
    }
    if (has_select()) {
      if (select_ != NULL) select_->::pborm::OrmMsgReqSelect::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool OrmMsgReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pborm.OrmMsgReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes msg_data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_msg_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_select;
        break;
      }

      // optional .pborm.OrmMsgReqSelect select = 2;
      case 2: {
        if (tag == 18) {
         parse_select:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_select()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pborm.OrmMsgReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pborm.OrmMsgReq)
  return false;
#undef DO_
}

void OrmMsgReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pborm.OrmMsgReq)
  // optional bytes msg_data = 1;
  if (has_msg_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->msg_data(), output);
  }

  // optional .pborm.OrmMsgReqSelect select = 2;
  if (has_select()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->select(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pborm.OrmMsgReq)
}

::google::protobuf::uint8* OrmMsgReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pborm.OrmMsgReq)
  // optional bytes msg_data = 1;
  if (has_msg_data()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->msg_data(), target);
  }

  // optional .pborm.OrmMsgReqSelect select = 2;
  if (has_select()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->select(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pborm.OrmMsgReq)
  return target;
}

int OrmMsgReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bytes msg_data = 1;
    if (has_msg_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->msg_data());
    }

    // optional .pborm.OrmMsgReqSelect select = 2;
    if (has_select()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->select());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OrmMsgReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const OrmMsgReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const OrmMsgReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void OrmMsgReq::MergeFrom(const OrmMsgReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msg_data()) {
      set_msg_data(from.msg_data());
    }
    if (from.has_select()) {
      mutable_select()->::pborm::OrmMsgReqSelect::MergeFrom(from.select());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void OrmMsgReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OrmMsgReq::CopyFrom(const OrmMsgReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OrmMsgReq::IsInitialized() const {

  return true;
}

void OrmMsgReq::Swap(OrmMsgReq* other) {
  if (other != this) {
    std::swap(msg_data_, other->msg_data_);
    std::swap(select_, other->select_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata OrmMsgReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = OrmMsgReq_descriptor_;
  metadata.reflection = OrmMsgReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int OrmMsgRsp::kCountFieldNumber;
const int OrmMsgRsp::kErrNoFieldNumber;
const int OrmMsgRsp::kErrMsgFieldNumber;
const int OrmMsgRsp::kSelectFieldNumber;
#endif  // !_MSC_VER

OrmMsgRsp::OrmMsgRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pborm.OrmMsgRsp)
}

void OrmMsgRsp::InitAsDefaultInstance() {
  select_ = const_cast< ::pborm::OrmMsgRspSelect*>(&::pborm::OrmMsgRspSelect::default_instance());
}

OrmMsgRsp::OrmMsgRsp(const OrmMsgRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pborm.OrmMsgRsp)
}

void OrmMsgRsp::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  count_ = 0;
  err_no_ = 0;
  err_msg_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  select_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

OrmMsgRsp::~OrmMsgRsp() {
  // @@protoc_insertion_point(destructor:pborm.OrmMsgRsp)
  SharedDtor();
}

void OrmMsgRsp::SharedDtor() {
  if (err_msg_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete err_msg_;
  }
  if (this != default_instance_) {
    delete select_;
  }
}

void OrmMsgRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OrmMsgRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OrmMsgRsp_descriptor_;
}

const OrmMsgRsp& OrmMsgRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_pborm_2eproto();
  return *default_instance_;
}

OrmMsgRsp* OrmMsgRsp::default_instance_ = NULL;

OrmMsgRsp* OrmMsgRsp::New() const {
  return new OrmMsgRsp;
}

void OrmMsgRsp::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<OrmMsgRsp*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 15) {
    ZR_(count_, err_no_);
    if (has_err_msg()) {
      if (err_msg_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        err_msg_->clear();
      }
    }
    if (has_select()) {
      if (select_ != NULL) select_->::pborm::OrmMsgRspSelect::Clear();
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool OrmMsgRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pborm.OrmMsgRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 count = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &count_)));
          set_has_count();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_err_no;
        break;
      }

      // optional int32 err_no = 2;
      case 2: {
        if (tag == 16) {
         parse_err_no:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &err_no_)));
          set_has_err_no();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_err_msg;
        break;
      }

      // optional string err_msg = 3;
      case 3: {
        if (tag == 26) {
         parse_err_msg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_err_msg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->err_msg().data(), this->err_msg().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "err_msg");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_select;
        break;
      }

      // optional .pborm.OrmMsgRspSelect select = 4;
      case 4: {
        if (tag == 34) {
         parse_select:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_select()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pborm.OrmMsgRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pborm.OrmMsgRsp)
  return false;
#undef DO_
}

void OrmMsgRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pborm.OrmMsgRsp)
  // optional int32 count = 1;
  if (has_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->count(), output);
  }

  // optional int32 err_no = 2;
  if (has_err_no()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->err_no(), output);
  }

  // optional string err_msg = 3;
  if (has_err_msg()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->err_msg().data(), this->err_msg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "err_msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->err_msg(), output);
  }

  // optional .pborm.OrmMsgRspSelect select = 4;
  if (has_select()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->select(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pborm.OrmMsgRsp)
}

::google::protobuf::uint8* OrmMsgRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pborm.OrmMsgRsp)
  // optional int32 count = 1;
  if (has_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->count(), target);
  }

  // optional int32 err_no = 2;
  if (has_err_no()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->err_no(), target);
  }

  // optional string err_msg = 3;
  if (has_err_msg()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->err_msg().data(), this->err_msg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "err_msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->err_msg(), target);
  }

  // optional .pborm.OrmMsgRspSelect select = 4;
  if (has_select()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->select(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pborm.OrmMsgRsp)
  return target;
}

int OrmMsgRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 count = 1;
    if (has_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->count());
    }

    // optional int32 err_no = 2;
    if (has_err_no()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->err_no());
    }

    // optional string err_msg = 3;
    if (has_err_msg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->err_msg());
    }

    // optional .pborm.OrmMsgRspSelect select = 4;
    if (has_select()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->select());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OrmMsgRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const OrmMsgRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const OrmMsgRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void OrmMsgRsp::MergeFrom(const OrmMsgRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_count()) {
      set_count(from.count());
    }
    if (from.has_err_no()) {
      set_err_no(from.err_no());
    }
    if (from.has_err_msg()) {
      set_err_msg(from.err_msg());
    }
    if (from.has_select()) {
      mutable_select()->::pborm::OrmMsgRspSelect::MergeFrom(from.select());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void OrmMsgRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OrmMsgRsp::CopyFrom(const OrmMsgRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OrmMsgRsp::IsInitialized() const {

  return true;
}

void OrmMsgRsp::Swap(OrmMsgRsp* other) {
  if (other != this) {
    std::swap(count_, other->count_);
    std::swap(err_no_, other->err_no_);
    std::swap(err_msg_, other->err_msg_);
    std::swap(select_, other->select_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata OrmMsgRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = OrmMsgRsp_descriptor_;
  metadata.reflection = OrmMsgRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int OrmMsgCB::kDataFieldNumber;
const int OrmMsgCB::kCookieFieldNumber;
const int OrmMsgCB::kSeqFieldNumber;
#endif  // !_MSC_VER

OrmMsgCB::OrmMsgCB()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pborm.OrmMsgCB)
}

void OrmMsgCB::InitAsDefaultInstance() {
}

OrmMsgCB::OrmMsgCB(const OrmMsgCB& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pborm.OrmMsgCB)
}

void OrmMsgCB::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cookie_ = GOOGLE_LONGLONG(0);
  seq_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

OrmMsgCB::~OrmMsgCB() {
  // @@protoc_insertion_point(destructor:pborm.OrmMsgCB)
  SharedDtor();
}

void OrmMsgCB::SharedDtor() {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete data_;
  }
  if (this != default_instance_) {
  }
}

void OrmMsgCB::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OrmMsgCB::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OrmMsgCB_descriptor_;
}

const OrmMsgCB& OrmMsgCB::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_pborm_2eproto();
  return *default_instance_;
}

OrmMsgCB* OrmMsgCB::default_instance_ = NULL;

OrmMsgCB* OrmMsgCB::New() const {
  return new OrmMsgCB;
}

void OrmMsgCB::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<OrmMsgCB*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 7) {
    ZR_(cookie_, seq_);
    if (has_data()) {
      if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        data_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool OrmMsgCB::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pborm.OrmMsgCB)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_cookie;
        break;
      }

      // optional int64 cookie = 2;
      case 2: {
        if (tag == 16) {
         parse_cookie:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &cookie_)));
          set_has_cookie();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_seq;
        break;
      }

      // optional uint32 seq = 3;
      case 3: {
        if (tag == 24) {
         parse_seq:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &seq_)));
          set_has_seq();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pborm.OrmMsgCB)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pborm.OrmMsgCB)
  return false;
#undef DO_
}

void OrmMsgCB::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pborm.OrmMsgCB)
  // optional bytes data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->data(), output);
  }

  // optional int64 cookie = 2;
  if (has_cookie()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->cookie(), output);
  }

  // optional uint32 seq = 3;
  if (has_seq()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->seq(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pborm.OrmMsgCB)
}

::google::protobuf::uint8* OrmMsgCB::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pborm.OrmMsgCB)
  // optional bytes data = 1;
  if (has_data()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->data(), target);
  }

  // optional int64 cookie = 2;
  if (has_cookie()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->cookie(), target);
  }

  // optional uint32 seq = 3;
  if (has_seq()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->seq(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pborm.OrmMsgCB)
  return target;
}

int OrmMsgCB::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bytes data = 1;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->data());
    }

    // optional int64 cookie = 2;
    if (has_cookie()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->cookie());
    }

    // optional uint32 seq = 3;
    if (has_seq()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->seq());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OrmMsgCB::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const OrmMsgCB* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const OrmMsgCB*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void OrmMsgCB::MergeFrom(const OrmMsgCB& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_data(from.data());
    }
    if (from.has_cookie()) {
      set_cookie(from.cookie());
    }
    if (from.has_seq()) {
      set_seq(from.seq());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void OrmMsgCB::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OrmMsgCB::CopyFrom(const OrmMsgCB& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OrmMsgCB::IsInitialized() const {

  return true;
}

void OrmMsgCB::Swap(OrmMsgCB* other) {
  if (other != this) {
    std::swap(data_, other->data_);
    std::swap(cookie_, other->cookie_);
    std::swap(seq_, other->seq_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata OrmMsgCB::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = OrmMsgCB_descriptor_;
  metadata.reflection = OrmMsgCB_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int OrmMsgOpt::kFlatmodeFieldNumber;
#endif  // !_MSC_VER

OrmMsgOpt::OrmMsgOpt()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pborm.OrmMsgOpt)
}

void OrmMsgOpt::InitAsDefaultInstance() {
}

OrmMsgOpt::OrmMsgOpt(const OrmMsgOpt& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pborm.OrmMsgOpt)
}

void OrmMsgOpt::SharedCtor() {
  _cached_size_ = 0;
  flatmode_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

OrmMsgOpt::~OrmMsgOpt() {
  // @@protoc_insertion_point(destructor:pborm.OrmMsgOpt)
  SharedDtor();
}

void OrmMsgOpt::SharedDtor() {
  if (this != default_instance_) {
  }
}

void OrmMsgOpt::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OrmMsgOpt::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OrmMsgOpt_descriptor_;
}

const OrmMsgOpt& OrmMsgOpt::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_pborm_2eproto();
  return *default_instance_;
}

OrmMsgOpt* OrmMsgOpt::default_instance_ = NULL;

OrmMsgOpt* OrmMsgOpt::New() const {
  return new OrmMsgOpt;
}

void OrmMsgOpt::Clear() {
  flatmode_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool OrmMsgOpt::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pborm.OrmMsgOpt)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 flatmode = 1 [default = 0];
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &flatmode_)));
          set_has_flatmode();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pborm.OrmMsgOpt)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pborm.OrmMsgOpt)
  return false;
#undef DO_
}

void OrmMsgOpt::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pborm.OrmMsgOpt)
  // optional uint32 flatmode = 1 [default = 0];
  if (has_flatmode()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->flatmode(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pborm.OrmMsgOpt)
}

::google::protobuf::uint8* OrmMsgOpt::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pborm.OrmMsgOpt)
  // optional uint32 flatmode = 1 [default = 0];
  if (has_flatmode()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->flatmode(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pborm.OrmMsgOpt)
  return target;
}

int OrmMsgOpt::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 flatmode = 1 [default = 0];
    if (has_flatmode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->flatmode());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OrmMsgOpt::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const OrmMsgOpt* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const OrmMsgOpt*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void OrmMsgOpt::MergeFrom(const OrmMsgOpt& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_flatmode()) {
      set_flatmode(from.flatmode());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void OrmMsgOpt::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OrmMsgOpt::CopyFrom(const OrmMsgOpt& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OrmMsgOpt::IsInitialized() const {

  return true;
}

void OrmMsgOpt::Swap(OrmMsgOpt* other) {
  if (other != this) {
    std::swap(flatmode_, other->flatmode_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata OrmMsgOpt::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = OrmMsgOpt_descriptor_;
  metadata.reflection = OrmMsgOpt_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int OrmMsg::kMsgFullTypeNameFieldNumber;
const int OrmMsg::kOpFieldNumber;
const int OrmMsg::kReqFieldNumber;
const int OrmMsg::kRspFieldNumber;
const int OrmMsg::kCbFieldNumber;
const int OrmMsg::kOptFieldNumber;
#endif  // !_MSC_VER

OrmMsg::OrmMsg()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pborm.OrmMsg)
}

void OrmMsg::InitAsDefaultInstance() {
  req_ = const_cast< ::pborm::OrmMsgReq*>(&::pborm::OrmMsgReq::default_instance());
  rsp_ = const_cast< ::pborm::OrmMsgRsp*>(&::pborm::OrmMsgRsp::default_instance());
  cb_ = const_cast< ::pborm::OrmMsgCB*>(&::pborm::OrmMsgCB::default_instance());
  opt_ = const_cast< ::pborm::OrmMsgOpt*>(&::pborm::OrmMsgOpt::default_instance());
}

OrmMsg::OrmMsg(const OrmMsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pborm.OrmMsg)
}

void OrmMsg::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  msg_full_type_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  op_ = 0;
  req_ = NULL;
  rsp_ = NULL;
  cb_ = NULL;
  opt_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

OrmMsg::~OrmMsg() {
  // @@protoc_insertion_point(destructor:pborm.OrmMsg)
  SharedDtor();
}

void OrmMsg::SharedDtor() {
  if (msg_full_type_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete msg_full_type_name_;
  }
  if (this != default_instance_) {
    delete req_;
    delete rsp_;
    delete cb_;
    delete opt_;
  }
}

void OrmMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OrmMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OrmMsg_descriptor_;
}

const OrmMsg& OrmMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_pborm_2eproto();
  return *default_instance_;
}

OrmMsg* OrmMsg::default_instance_ = NULL;

OrmMsg* OrmMsg::New() const {
  return new OrmMsg;
}

void OrmMsg::Clear() {
  if (_has_bits_[0 / 32] & 63) {
    if (has_msg_full_type_name()) {
      if (msg_full_type_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        msg_full_type_name_->clear();
      }
    }
    op_ = 0;
    if (has_req()) {
      if (req_ != NULL) req_->::pborm::OrmMsgReq::Clear();
    }
    if (has_rsp()) {
      if (rsp_ != NULL) rsp_->::pborm::OrmMsgRsp::Clear();
    }
    if (has_cb()) {
      if (cb_ != NULL) cb_->::pborm::OrmMsgCB::Clear();
    }
    if (has_opt()) {
      if (opt_ != NULL) opt_->::pborm::OrmMsgOpt::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool OrmMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pborm.OrmMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string msg_full_type_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg_full_type_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->msg_full_type_name().data(), this->msg_full_type_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "msg_full_type_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_op;
        break;
      }

      // required .pborm.OrmMsgOP op = 2;
      case 2: {
        if (tag == 16) {
         parse_op:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::pborm::OrmMsgOP_IsValid(value)) {
            set_op(static_cast< ::pborm::OrmMsgOP >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_req;
        break;
      }

      // optional .pborm.OrmMsgReq req = 3;
      case 3: {
        if (tag == 26) {
         parse_req:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_req()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_rsp;
        break;
      }

      // optional .pborm.OrmMsgRsp rsp = 4;
      case 4: {
        if (tag == 34) {
         parse_rsp:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_rsp()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_cb;
        break;
      }

      // optional .pborm.OrmMsgCB cb = 5;
      case 5: {
        if (tag == 42) {
         parse_cb:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_cb()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_opt;
        break;
      }

      // optional .pborm.OrmMsgOpt opt = 6;
      case 6: {
        if (tag == 50) {
         parse_opt:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_opt()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pborm.OrmMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pborm.OrmMsg)
  return false;
#undef DO_
}

void OrmMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pborm.OrmMsg)
  // required string msg_full_type_name = 1;
  if (has_msg_full_type_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg_full_type_name().data(), this->msg_full_type_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "msg_full_type_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->msg_full_type_name(), output);
  }

  // required .pborm.OrmMsgOP op = 2;
  if (has_op()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->op(), output);
  }

  // optional .pborm.OrmMsgReq req = 3;
  if (has_req()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->req(), output);
  }

  // optional .pborm.OrmMsgRsp rsp = 4;
  if (has_rsp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->rsp(), output);
  }

  // optional .pborm.OrmMsgCB cb = 5;
  if (has_cb()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->cb(), output);
  }

  // optional .pborm.OrmMsgOpt opt = 6;
  if (has_opt()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->opt(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pborm.OrmMsg)
}

::google::protobuf::uint8* OrmMsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pborm.OrmMsg)
  // required string msg_full_type_name = 1;
  if (has_msg_full_type_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg_full_type_name().data(), this->msg_full_type_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "msg_full_type_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->msg_full_type_name(), target);
  }

  // required .pborm.OrmMsgOP op = 2;
  if (has_op()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->op(), target);
  }

  // optional .pborm.OrmMsgReq req = 3;
  if (has_req()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->req(), target);
  }

  // optional .pborm.OrmMsgRsp rsp = 4;
  if (has_rsp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->rsp(), target);
  }

  // optional .pborm.OrmMsgCB cb = 5;
  if (has_cb()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->cb(), target);
  }

  // optional .pborm.OrmMsgOpt opt = 6;
  if (has_opt()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->opt(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pborm.OrmMsg)
  return target;
}

int OrmMsg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string msg_full_type_name = 1;
    if (has_msg_full_type_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->msg_full_type_name());
    }

    // required .pborm.OrmMsgOP op = 2;
    if (has_op()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->op());
    }

    // optional .pborm.OrmMsgReq req = 3;
    if (has_req()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->req());
    }

    // optional .pborm.OrmMsgRsp rsp = 4;
    if (has_rsp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->rsp());
    }

    // optional .pborm.OrmMsgCB cb = 5;
    if (has_cb()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->cb());
    }

    // optional .pborm.OrmMsgOpt opt = 6;
    if (has_opt()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->opt());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OrmMsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const OrmMsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const OrmMsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void OrmMsg::MergeFrom(const OrmMsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msg_full_type_name()) {
      set_msg_full_type_name(from.msg_full_type_name());
    }
    if (from.has_op()) {
      set_op(from.op());
    }
    if (from.has_req()) {
      mutable_req()->::pborm::OrmMsgReq::MergeFrom(from.req());
    }
    if (from.has_rsp()) {
      mutable_rsp()->::pborm::OrmMsgRsp::MergeFrom(from.rsp());
    }
    if (from.has_cb()) {
      mutable_cb()->::pborm::OrmMsgCB::MergeFrom(from.cb());
    }
    if (from.has_opt()) {
      mutable_opt()->::pborm::OrmMsgOpt::MergeFrom(from.opt());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void OrmMsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OrmMsg::CopyFrom(const OrmMsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OrmMsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void OrmMsg::Swap(OrmMsg* other) {
  if (other != this) {
    std::swap(msg_full_type_name_, other->msg_full_type_name_);
    std::swap(op_, other->op_);
    std::swap(req_, other->req_);
    std::swap(rsp_, other->rsp_);
    std::swap(cb_, other->cb_);
    std::swap(opt_, other->opt_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata OrmMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = OrmMsg_descriptor_;
  metadata.reflection = OrmMsg_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pborm

// @@protoc_insertion_point(global_scope)
